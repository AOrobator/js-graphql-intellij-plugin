IMPORT ('import')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_BODY ('foo')
CLOSING_QUOTE ('"')
WHITE_SPACE ('\n')
IMPORT ('import')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_BODY ('bar')
CLOSING_QUOTE ('"')
WHITE_SPACE ('\n\n')
interface ('interface')
WHITE_SPACE (' ')
IDENTIFIER ('Bar')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
IDENTIFIER ('bar1')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('String')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
IDENTIFIER ('Foo')
WHITE_SPACE (' ')
implements ('implements')
WHITE_SPACE (' ')
IDENTIFIER ('Bar')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('# foo1')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
NUMBER ('1')
) (')')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
false ('false')
) (')')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
OPEN_QUOTE ('"')
STRING_BODY ('Bar')
CLOSING_QUOTE ('"')
) (')')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
IDENTIFIER ('foo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_BODY ('Bar')
CLOSING_QUOTE ('"')
) (')')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
IDENTIFIER ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
OPEN_QUOTE ('"')
STRING_BODY ('foo')
CLOSING_QUOTE ('"')
, (',')
WHITE_SPACE (' ')
IDENTIFIER ('batched')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
true ('true')
) (')')
WHITE_SPACE ('\n    ')
IDENTIFIER ('foo1')
( ('(')
IDENTIFIER ('foo')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('String')
! ('!')
, (',')
WHITE_SPACE (' ')
IDENTIFIER ('bar')
: (':')
WHITE_SPACE (' ')
[ ('[')
IDENTIFIER ('Boolean')
] (']')
) (')')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('String')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('# foo2')
WHITE_SPACE ('\n    ')
AT_ANNOTATION ('@DataFetcher')
( ('(')
OPEN_QUOTE ('"')
STRING_BODY ('foo')
CLOSING_QUOTE ('"')
) (')')
WHITE_SPACE ('\n    ')
IDENTIFIER ('foo')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('String')
WHITE_SPACE ('\n\n')
} ('}')
WHITE_SPACE ('\n\n')
input ('input')
WHITE_SPACE (' ')
IDENTIFIER ('Foo')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
IDENTIFIER ('bar')
: (':')
WHITE_SPACE (' ')
IDENTIFIER ('Base')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
enum ('enum')
WHITE_SPACE (' ')
IDENTIFIER ('Enum')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
IDENTIFIER ('A')
, (',')
WHITE_SPACE ('\n    ')
IDENTIFIER ('B')
, (',')
WHITE_SPACE ('\n    ')
IDENTIFIER ('C')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
union ('union')
WHITE_SPACE (' ')
IDENTIFIER ('Foo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
IDENTIFIER ('A')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
IDENTIFIER ('B')
WHITE_SPACE ('\n\n')
SCALAR ('scalar')
WHITE_SPACE (' ')
IDENTIFIER ('Date')
WHITE_SPACE ('\n')